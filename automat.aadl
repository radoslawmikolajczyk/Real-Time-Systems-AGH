package automat
public

	with base_types;
	with deployment;

	system AutomatSystem
	end AutomatSystem;

	system implementation AutomatSystem.with_devices
		subcomponents
			this_panel_zewnetrzny: device panel_zewnetrzny.impl;
			this_silownik_spirali: device silownik_spirali.impl;
			this_oswietlenie: device oswietlenie.impl;
			this_licznik_monet: device licznik_monet.impl;
			this_chlodziarka: device chlodziarka.impl;
			this_wyswietlacz: device wyswietlacz.impl;
			this_controller: process Controller;
			this_bus: bus HWConnection.impl;
			--dzieki temu ze RAM jest subcomponentem MainProcessor nie musimy juz jej osobno tutaj dodawac
			this_processor: processor MainProcessor.impl;
		
		connections
			
			--polaczenia z magistrala
			bus_panel_zewnetrzny: bus access this_bus -> this_panel_zewnetrzny.bus_access;
			bus_silownik_spirali: bus access this_bus -> this_silownik_spirali.bus_access;
			bus_oswietlenie: bus access this_bus -> this_oswietlenie.bus_access;
			bus_licznik_monet: bus access this_bus -> this_licznik_monet.bus_access;
			bus_chlodziarka: bus access this_bus -> this_chlodziarka.bus_access;
			bus_wyswietlacz: bus access this_bus -> this_wyswietlacz.bus_access;
			bus_processor: bus access this_bus -> this_processor.bus_access;

		--polaczenia z kontrolerem
			panel_conn_in: port this_panel_zewnetrzny.numerek -> this_controller.numerek_in;
			panel_conn_out: port this_controller.numerek_out -> this_wyswietlacz.wyswietl;
			silownik_conn: port this_controller.ruch_spirala -> this_silownik_spirali.ruch;
			licznik_monet_wartosc_conn: port this_licznik_monet.wartosc_monet -> this_controller.wartosc_monet;
			chlodziarka_conn: port this_controller.chlodzenie_on -> this_chlodziarka.chlodz;
			wyswitlacz_conn: port this_controller.wyswietl_on -> this_wyswietlacz.wyswietl;
			reszta_conn: port this_controller.reszta_in -> this_licznik_monet.reszta_out;

			
		properties
			Actual_Processor_Binding => (reference (this_processor)) applies to this_controller;
			Actual_Connection_Binding => (reference (this_bus)) applies to panel_conn_in;
			Actual_Connection_Binding => (reference (this_bus)) applies to panel_conn_out;
			Actual_Connection_Binding => (reference (this_bus)) applies to silownik_conn;
			Actual_Connection_Binding => (reference (this_bus)) applies to licznik_monet_wartosc_conn;
			Actual_Connection_Binding => (reference (this_bus)) applies to chlodziarka_conn;
			Actual_Connection_Binding => (reference (this_bus)) applies to wyswitlacz_conn;
			Actual_Connection_Binding => (reference (this_bus)) applies to reszta_conn;
			
	end AutomatSystem.with_devices;

	process Controller
		features
			numerek_in: in data port Base_Types::Integer_16;
			numerek_out: out data port Base_Types::Integer_16;
			ruch_spirala: out event port;
			reszta_in: out data port Base_Types::Integer_16;
			wartosc_monet: in data port Base_Types::Integer_16;
			chlodzenie_on: out event port;
			wyswietl_on: out data port Base_Types::Integer_16;
	end Controller;

	process implementation Controller.with_threads
		subcomponents
			this_thread_pokaz: thread Pokaz.impl;
			this_thread_zaplac: thread Zaplac.impl;
			this_thread_chlodzenie: thread ChlodzenieThread.impl;
			this_thread_wydaj: thread WydajThread.impl;
			this_thread_przyciski: thread PrzyciskiThread.impl;

		connections
			chlodzenie_conn: port this_thread_chlodzenie.chlodzenie -> chlodzenie_on;
			wydaj_conn: port this_thread_wydaj.ruch_spirala -> ruch_spirala;
			wydaj_reszta_conn: port this_thread_wydaj.reszta_out -> reszta_in;

			przycisk_in_conn: port numerek_in -> this_thread_przyciski.numerek_in;
			przycisk_out_conn: port this_thread_przyciski.numerek_out -> numerek_out;
			
			pokarz_conn: port this_thread_pokaz.panel_conn_out -> wyswietl_on;
			pokarz_in_conn: port numerek_in -> this_thread_pokaz.panel_conn_in;
			
			zaplac_conn_n_in: port numerek_in -> this_thread_zaplac.numerek_in;
			zaplac_conn_n_out: port this_thread_przyciski.numerek_out -> this_thread_zaplac.numerek_in;			
			zaplac_conn_panel: port this_thread_zaplac.panel_conn_out -> this_thread_pokaz.panel_conn_in;			
			zaplac_conn_reszta: port this_thread_zaplac.reszta_out -> reszta_in;
			zaplac_conn_spirala: port this_thread_zaplac.ruch_spirala -> ruch_spirala;

	end Controller.with_threads;

	subprogram wydaj_reszte
	end wydaj_reszte;

	subprogram implementation wydaj_reszte.impl
		properties
			Source_language => (C);
			Source_name => "wydaj_reszte";
			source_text => ("automat.c");
	end wydaj_reszte.impl;

	subprogram wydaj_produkt
	end wydaj_produkt;

	subprogram implementation wydaj_produkt.impl
		properties
			Source_language => (C);
			source_name => "wydaj_produkt";
			source_text => ("automat.c");
	end wydaj_produkt.impl;

	subprogram wyswietl
	end wyswietl;

	subprogram implementation wyswietl.impl
		properties
			Source_language => (C);
			source_name => "wyswietl_info";
			source_text => ("automat.c");
	end wyswietl.impl;

	subprogram wcisniety_guzik
	end wcisniety_guzik;

	subprogram implementation wcisniety_guzik.impl
		properties
			Source_language => (C);
			source_name => "wcisniety_guzik";
			source_text => ("automat.c");
	end wcisniety_guzik.impl;

	subprogram chlodzenie
	end chlodzenie;

	subprogram implementation chlodzenie.impl
		properties
			Source_language => (C);
			source_name => "chlodzenie";
			source_text => ("automat.c");
	end chlodzenie.impl;

	subprogram platnosc
	end platnosc;

	subprogram implementation platnosc.impl
		properties
			Source_language => (C);
			source_name => "platnosc";
			source_text => ("automat.c");
	end platnosc.impl;

	subprogram moneta_wrzucona
	end moneta_wrzucona;

	subprogram implementation moneta_wrzucona.impl
		properties
			Source_language => (C);
			source_name => "moneta_wrzucona";
			source_text => ("automat.c");
	end moneta_wrzucona.impl;

	subprogram swiec
	end swiec;

	subprogram implementation swiec.impl
		properties
			Source_language => (C);
			source_name => "swiec";
			source_text => ("automat.c");
	end swiec.impl;

	thread Pokaz
		features
			panel_conn_in: in data port Base_Types::Integer_16;
			panel_conn_out: out data port Base_Types::Integer_16;
	end Pokaz;

	thread implementation Pokaz.impl
		calls
			Main: {
						pokaz_informacje: subprogram wyswietl;
					};
		properties
			Dispatch_protocol => Aperiodic;
	end Pokaz.impl;

	thread Zaplac
		features
			ruch_spirala: out event port;
			numerek_in: in data port Base_Types::Integer_16;
			panel_conn_out: out data port Base_Types::Integer_16;
			reszta_out: out data port Base_Types::Integer_16;
	end Zaplac;

	thread implementation zaplac.impl
		calls
			Main: {
						zaplac: subprogram platnosc;
					};
		properties
			Dispatch_protocol => Aperiodic;
	end zaplac.impl;

	thread MoneyThread
		features
			wartosc_monet: in data port Base_Types::Integer_16;
	end MoneyThread;

	thread implementation MoneyThread.impl
		calls
			Main: {
						insert_money_call: subprogram moneta_wrzucona;
					};
		properties
			Dispatch_protocol => Aperiodic;
	end MoneyThread.impl;

	thread ChlodzenieThread
		features
			chlodzenie: out data port Base_Types::Integer_16;
	end ChlodzenieThread;

	thread implementation ChlodzenieThread.impl
		calls
			Main: {
						chlodz: subprogram chlodzenie;
					};
		properties
			Dispatch_protocol => Aperiodic;
	end ChlodzenieThread.impl;

	thread WydajThread
		features
			ruch_spirala: out data port Base_Types::Integer_16;
			reszta_out: out data port Base_Types::Integer_16;
	end WydajThread;

	thread implementation WydajThread.impl
		calls
			Main: {
						give_change_call: subprogram wydaj_reszte;
						give_product_call: subprogram wydaj_produkt;
					};
		properties
			Dispatch_protocol => Aperiodic;
	end WydajThread.impl;

	thread przyciskiThread
		features
			numerek_in: in data port Base_Types::Integer_16;
			numerek_out: out data port Base_Types::Integer_16;
	end przyciskiThread;

	thread implementation przyciskiThread.impl
		calls
			Main: {
						wcisniety_guzik: subprogram wcisniety_guzik;
					};
		properties
			Dispatch_protocol => Aperiodic;
	end przyciskiThread.impl;

	processor MainProcessor
		features
			bus_access: requires bus access HWConnection;
		properties
			Scheduling_Protocol => (POSIX_1003_HIGHEST_PRIORITY_FIRST_PROTOCOL);
			Deployment::Execution_Platform => Native;
	end MainProcessor;

	processor implementation MainProcessor.impl
		subcomponents
			this_RAM: memory RAM;
	end MainProcessor.impl;

	memory RAM
	end RAM;

	bus HWConnection
		properties
			deployment::transport_api => BSD_Sockets;
	end HWConnection;

	bus implementation HWConnection.impl
	end HWConnection.impl;

	device panel_zewnetrzny
		features
			numerek: out data port Base_Types::Integer_16;
			bus_access: requires bus access HWConnection;
	end panel_zewnetrzny;

	device implementation panel_zewnetrzny.impl
	end panel_zewnetrzny.impl;

	device silownik_spirali
		features
			ruch: in event port;
			bus_access: requires bus access HWConnection;
	end silownik_spirali;

	device implementation silownik_spirali.impl
	end silownik_spirali.impl;

	device oswietlenie
		features
			light_on: in event port;
			bus_access: requires bus access HWConnection;
	end oswietlenie;

	device implementation oswietlenie.impl
	end oswietlenie.impl;

	device licznik_monet
		features
			wartosc_monet: out data port Base_Types::Integer_16;
			reszta_out: in data port Base_Types::Integer_16;
			bus_access: requires bus access HWConnection;
	end licznik_monet;

	device implementation licznik_monet.impl
	end licznik_monet.impl;

	device chlodziarka
		features
			chlodz: in event port;
			bus_access: requires bus access HWConnection;
	end chlodziarka;

	device implementation chlodziarka.impl
	end chlodziarka.impl;

	device wyswietlacz
		features
			wyswietl: in data port Base_Types::Integer_16;
			bus_access: requires bus access HWConnection;
	end wyswietlacz;

	device implementation wyswietlacz.impl
	end wyswietlacz.impl;

end automat;